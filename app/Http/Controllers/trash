fragile
{{
    glassware
    utensils
    gascooker
    phones
    tv sets
    microwaves
    washing machines
    blenders
    laptops
    plastics
    glass tables
    beauty products
 }}


add tracking number in the
customer form to send parcels

$fragile = [
'phones',
'tv set',
'fridges',
'glassware',
'electric kettle',
'microwave',
'laptop',
'blender',
'tampered glasscooker',
'washing machine',
'subwoofer',
'hometheatre',
'iron box'
];


if ($fragile && $weight <=10){ $price=300; } else if ($fragile && $weight>10 && <=45){ $price=(($weight - $standard) *
        20) + 300; } else if ($fragile && $weight>45 && <=100){ $price=(($standard - $initialWeight) * 15) + (($bulk -
            $standard) *36) + 300; } else if(!$fragile && $weight <=10){ $price=300; } else if (!$fragile && $weight>10
            && <=45){ $price=(($weight - $standard) * 20) + 200; } else if (!$fragile && $weight>45 && <=100) {
                    $price=(($standard - $initialWeight) * 15) + (($bulk - $standard) *36) + 200; } else if (!$fragile
                    && $weight>100 && <=999){ $price=($weight * 43) + 233 ; } else {
                        $error='The weight input is too huge, it cannot be accepted' ; return redirect()->route('route
                        name');
                        }
                        <!-- add an else statement in the ParcelController
                        to terminate the validation if the conditions do not meet the rqments
                     -->

                        <!-- calculate the price of a parcel based on distance weight and also the
                                fragility of the parcel.
                                then submit back with a redirect and a json response upon successful submission of the form.

                    -->

                        $curl_Tranfer = curl_init();
                        curl_setopt($curl_Tranfer, CURLOPT_URL, $access_token_url);
                        $credentials = base64_encode($consumerKey . ':' . $consumerSecret);
                        curl_setopt($curl_Tranfer, CURLOPT_HTTPHEADER, array('Authorization: Basic ' . $credentials));
                        curl_setopt($curl_Tranfer, CURLOPT_HEADER, false);
                        curl_setopt($curl_Tranfer, CURLOPT_RETURNTRANSFER, 1);
                        curl_setopt($curl_Tranfer, CURLOPT_SSL_VERIFYPEER, false);
                        $curl_Tranfer_response = curl_exec($curl_Tranfer);

                        $token = json_decode($curl_Tranfer_response)->access_token;

                        $curl_Tranfer2 = curl_init();
                        curl_setopt($curl_Tranfer2, CURLOPT_URL, $OnlinePayment);
                        curl_setopt($curl_Tranfer2, CURLOPT_HTTPHEADER, array('Content-Type:application/json',
                        'Authorization:Bearer ' . $token));

                        $curl_Tranfer2_post_data = [
                        'BusinessShortCode' => $Business_Code,
                        'Password' => $password,
                        'Timestamp' =>$Time_Stamp,
                        'TransactionType' =>$Type_of_Transaction,
                        'Amount' => $total_amount,
                        'PartyA' => '254797871932',
                        'PartyB' => $Business_Code,
                        'PhoneNumber' => $phone_number,
                        'CallBackURL' => $CallBackURL,
                        'AccountReference' => 'Nyaga',
                        'TransactionDesc' => 'Test',
                        ];

                        $data2_string = json_encode($curl_Tranfer2_post_data);

                        curl_setopt($curl_Tranfer2, CURLOPT_RETURNTRANSFER, true);
                        curl_setopt($curl_Tranfer2, CURLOPT_POST, true);
                        curl_setopt($curl_Tranfer2, CURLOPT_POSTFIELDS, $data2_string);
                        curl_setopt($curl_Tranfer2, CURLOPT_HEADER, false);
                        curl_setopt($curl_Tranfer2, CURLOPT_SSL_VERIFYPEER, 0);
                        curl_setopt($curl_Tranfer2, CURLOPT_SSL_VERIFYHOST, 0);
                        $curl_Tranfer2_response = json_decode(curl_exec($curl_Tranfer2));

                        echo json_encode($curl_Tranfer2_response, JSON_PRETTY_PRINT);


                        snakes in deep sea,carter,rabbit hole,mutant snake,